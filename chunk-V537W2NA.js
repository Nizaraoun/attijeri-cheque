import{f as L}from"./chunk-FSQC7LEL.js";import{b as g,e as m,f as h,i as f,r as d}from"./chunk-YFRBFD7N.js";import{A as u,P as v,Pb as w,U as l,a as I,e as S,k as s,n,o as a,pa as j,s as c}from"./chunk-TPGXXVT3.js";var k=class i{constructor(r,t){this.router=r;this.platformId=t;this.isBrowser=w(this.platformId),this.isBrowser&&(this.isLoggedInSubject=new s(this.hasToken()),this.isLoggedIn$=this.isLoggedInSubject.asObservable(),this.checkUserSession())}currentUserSubject=new s(null);currentUser$=this.currentUserSubject.asObservable();isLoggedInSubject=new s(!1);isLoggedIn$=this.isLoggedInSubject.asObservable();isBrowser;checkUserSession(){if(!this.isBrowser)return;let r=localStorage.getItem("user");if(r){let t=JSON.parse(r);this.currentUserSubject.next(t),this.isLoggedInSubject.next(!0)}}hasToken(){return this.isBrowser?!!localStorage.getItem("token")||!!localStorage.getItem("isLoggedIn"):!1}login(r,t){return n(this.checkAdminCredentials(r,t)).pipe(c(e=>{if(!e)throw new Error("Invalid email or password");let o={success:!0,user:{id:e.id,email:e.email,fullName:e.fullName||"Admin User",role:"admin"},token:"firebase-auth-token"};return this.isBrowser&&(localStorage.setItem("token",o.token),localStorage.setItem("isLoggedIn","true"),localStorage.setItem("user",JSON.stringify(o.user)),this.currentUserSubject.next(o.user),this.isLoggedInSubject.next(!0)),o}),u(e=>{throw console.error("Login error:",e),e}))}checkAdminCredentials(r,t){return S(this,null,function*(){try{let e=g(d,"Back_office"),o=m(e,h("email","==",r),h("mdp","==",t)),b=yield f(o);if(b.empty)return null;let p=b.docs[0];return I({id:p.id},p.data())}catch(e){return console.error("Error checking admin credentials:",e),null}})}getTotalAccountsCount(){if(!this.isBrowser)return a(0);let r=g(d,"client"),t=m(r);return n(f(t)).pipe(c(e=>e.size),u(e=>(console.error("Error counting accounts:",e),a(0))))}logout(){this.isBrowser&&(localStorage.removeItem("token"),localStorage.removeItem("isLoggedIn"),localStorage.removeItem("user")),this.currentUserSubject.next(null),this.isLoggedInSubject.next(!1),this.router.navigate(["/auth/login"])}getCurrentUser(){return this.currentUserSubject.value}isLoggedIn(){return this.isLoggedInSubject.value}canAccess(){let r=this.isLoggedIn();return r||this.router.navigate(["/auth/login"]),r}static \u0275fac=function(t){return new(t||i)(l(L),l(j))};static \u0275prov=v({token:i,factory:i.\u0275fac,providedIn:"root"})};export{k as a};
